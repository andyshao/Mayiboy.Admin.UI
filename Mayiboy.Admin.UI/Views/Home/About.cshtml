
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>介绍</title>
    @*<link href="~/Content/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />*@
    <link href="~/Content/lib/layui/css/layui.css" rel="stylesheet" />
    <script src="~/Content/lib/jquery/jQuery-2.2.0.min.js"></script>
    <script src="~/Content/lib/layui/layui.js"></script>
</head>
<body>
    <div class="body layui-layout-body" style="margin: 0 15% 0 15%; margin-top: 20px;">
        <div class="layui-col-md12">
            <div class="layui-card">
                <div class="layui-card-header">
                    平台介绍
                </div>
                <div class="layui-card-body">
                    <p>
                        <img src="~/Content/Images/flag.png" />本框架版权最终解释权归七岁闲僧
                    </p>
                </div>
            </div>
            <div class="layui-card">
                <div class="layui-card-header">
                    使用技术介绍
                </div>
                <div class="layui-card-body">
                    <div>
                        <h4>前端技术</h4>
                        <div style="float: left; width: 50%;">
                            <p>
                                <img src="~/Content/Images/flag.png" />JS框架：JQuery-2.2.0、JQuery-EasyUI-1.3.4、Bootstrap-3.3.6、Layui-2.2.6
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />CSS框架：Bootstrap
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />在线编辑器：UEditor
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />数据表格：Layui-table、Jquery-EasyUI-treegrid
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />对话框：Layui-2.2.6
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />下拉选择框：Layui-2.2.6、Jquery-EasyUI-combotree
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />树结构控件：Jquery-EasyUI-treegrid、Jquery-EasyUI-combotree
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />页面布局：jquery.layout 2.2.6
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />日期控件：Layui-datetime
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />工作流可视化控件
                            </p>
                        </div>
                        <div style="float: left; width: 50%;">
                            <p>
                                <img src="~/Content/Images/flag.png" />兼容BootStrape和JQuery-EasyUI
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />图标：font awesome 3.2
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />表格：Layui-table、Jquery-EasyUI-treegrid
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />图表：jquery.flot、jquery.easy-pie-chart
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />提示框：Layui
                            </p>
                            <p>
                                <img src="~/Content/Images/flag.png" />缓存框架：RunTimeCache、Redis
                            </p>
                        </div>
                    </div>
                    <div style="float: left; margin-bottom:10px;">
                        <h4>后端技术</h4>
                        <p>
                            &nbsp; &nbsp; &nbsp; &nbsp; 框架基于微软ASP.NET MVC5框架，基础组件（Framework.Mayiboy.Utility）、IOC控制反转（Framework.Mayiboy.Ioc）、对象关系映射（ORM）、对象映射（AutoMapper）、
                            缓存组件（Framework.Mayiboy.Caching）、日志组件(Framework.Mayiboy.Logging )、前端UI组件和各种插件，
                            完成框架基本功能。
                        </p>

                    </div>
                    <div class="keyTech" style="float: left;">
                        <div id="Utility" style="float: left;margin-bottom:10px;">
                            <h5>基础组件</h5>
                            <p>
                                &nbsp; &nbsp; &nbsp; &nbsp; 基础组件，主要提供常用常用扩展方法、加密、Cookie操作、Session操作、随机验证码、压缩、枚举操作、FTP帮助类、Http请求操作、邮件操作、拼音转换、
                                随机数、正则帮助、序列化帮助类、XML操作等等。
                            </p>
                        </div>
                        <div id="IOC" style="float: left; margin-bottom: 10px;">
                            <h5>IOC</h5>
                            <p>
                                &nbsp; &nbsp; &nbsp; &nbsp; IOC(inversion of control)即控制反转，并非一种技术，二是一种设计思想。主要用来帮助应用程序解耦，
                                并把程序分离成一个个高内聚低耦合的模块。传统应用程序都是在类内部主动创建依赖对象，从而导致类
                                与类之间高耦合，利用IoC容器把创建和查找依赖对象的控制权交给容器，由容器进行注入组合对象，所以
                                对象与对象之间是松散耦合，利于功能复用，程序的整体结构更加灵活。本框架中采用基于.net平台的Autofac框架的第三方组件（Framework.Mayiboy.Ioc），
                                使用它的目的在于做到最少配置，并且更加灵活。
                            </p>
                        </div>
                        <div id="ORM" style="float: left; margin-bottom: 10px;">
                            <h5>ORM</h5>
                            <p>
                                &nbsp; &nbsp; &nbsp; &nbsp; 对象关系映射（Object Relational Mapping，简写为ORM）用于实现面向对象编程语言里不同类型系统的数
                                据之间的转换。简约后台管理框架中ORM采用SqlSugar，它是一款高性能（达到ADO.NET最高性能水平），是除EF外
                                拉姆达解析最完善的ORM，支持多表 、UnionALL、 交叉子查询、真实的批量操作和分页，并支持分布式二级缓存
                                （CRUD可以自动清除缓存)和读写分离功能，对数据库结构结构没太多要求支持主键、多自增列和异步，语法简单，功能完善。
                            </p>
                        </div>
                        <div id="automapper" style="float: left; margin-bottom: 10px;">
                            <h5>对象映射</h5>
                            <p>
                                &nbsp; &nbsp; &nbsp; &nbsp; 对象映射 主要是帮助开发人员实现实体之间的转换，减少开发人员繁琐的手动赋值，本系统主要使用AutoMapper组件
                                实现对象映射功能。
                            </p>
                        </div>

                        <div id="cache" style="float: left; margin-bottom: 10px;">
                            <h5>缓存组件</h5>
                            <p>
                                &nbsp; &nbsp; &nbsp; &nbsp; 缓存就是数据交换的缓冲区（称作Cache），当某一硬件要读取数据时，会首先从缓存中查找需要的数据，
                                如果找到了则直接执行，找不到的话则从内存中找。由于缓存的运行速度比内存快得多，故缓存的作用就是帮助硬件更快地运行。本系统采用
                                Framework.Mayiboy.Caching组件，该组件封装了常用到的运行时缓存、Memcached、Reids，使用简单，切换灵活。
                            </p>
                        </div>
                        <div id="log" style="float: left; margin-bottom: 10px;">
                            <h5>日志组件</h5>
                            <p>
                                &nbsp; &nbsp; &nbsp; &nbsp; 系统日志，主要记录系统执行记录，状态，报错等信息。本系统使用Framework.Mayiboy.Logging组件，使用方便，操作灵活，
                                具有多种记录器（系统、文件、邮件、Http、Udp、Queue等等）。
                            </p>
                        </div>

                    </div>
                </div>
            </div>
            <div class="layui-card">
                <div class="layui-card-header">
                    联系我们
                </div>
                <div class="layui-card-body" style="text-align: center;">
                    <span>技术交流QQ群：<a href="//shang.qq.com/wpa/qunwpa?idkey=fcdda613e1ba9c69ff7d57cc99c8c82febef208259d3946543b24fc973b727c3" target="_blank">595352365</a></span>
                </div>
            </div>
        </div>
    </div>
</body>
</html>